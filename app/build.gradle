import groovy.transform.Field

import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: '../config/quality.gradle'
apply from: './module_config/dependencies.gradle'
apply from: './module_config/flavors.gradle'
apply from: './module_config/signing.gradle'
apply from: './module_config/build_types.gradle'

buildscript {
    final FABRIC_VERSION = '1.25.4'

    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath "io.fabric.tools:gradle:$FABRIC_VERSION"
    }
}

@Field def versionMajor = 0
@Field def versionMinor = 0
@Field def versionPatch = 1
@Field def currentVersion = 1

android {
    flavorDimensions "default"
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "chris.did.nudg"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionName computeVersionName()
        versionCode currentVersion

        buildConfigField 'String', 'BUILD_TIME_UTC', "\"${getBuildTimeUTC()}\""
        buildConfigField 'String', 'SHA', "\"${getGitSha()}\""

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dexOptions {
        javaMaxHeapSize "2048M"
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    packagingOptions {
        pickFirst 'org/threeten/bp/format/ChronologyText.properties'
    }
}

def computeVersionName() {
    return "${versionMajor}.${versionMinor}.${versionPatch} - (${getGitSha()})"
}

private static def getGitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

private static def getBuildTimeUTC() {
    def formatter = new SimpleDateFormat("yyyy-MM-dd'T' HH:mm'Z'")
    formatter.setTimeZone(TimeZone.getTimeZone("UTC"))
    return formatter.format(new Date())
}